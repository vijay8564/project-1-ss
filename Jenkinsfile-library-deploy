@Library('my-shared-library') _
pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/vijay8564/project-1-ss.git'
        BRANCH = 'master'
        SONAR_PROJECT_KEY = 'your-project-key'
        SONAR_HOST_URL = 'http://sonarqube.yourcompany.com'
        SONAR_LOGIN_TOKEN = 'your-sonarqube-token'
        NEXUS_URL = 'http://nexus.yourcompany.com'
        NEXUS_REPOSITORY = 'your-repository'
        NEXUS_CREDENTIALS_ID = 'nexus-credentials'
        ARTIFACT_PATH = 'target/your-artifact.jar'
        IMAGE_NAME = 'your-docker-image'
        REGISTRY_CREDENTIALS_ID = 'docker-registry-credentials'
        K8S_MANIFEST_PATH = 'k8s/your-deployment.yaml'
        KUBECONFIG_CREDENTIALS_ID = 'kubeconfig-credentials'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkoutCode(REPO_URL, BRANCH)
            }
        }

        stage('Maven Build') {
            steps {
                mvnBuild()
            }
        }
        /*
        stage('SonarQube Analysis') {
            steps {
                sonarQubeAnalyze(SONAR_PROJECT_KEY, SONAR_HOST_URL, SONAR_LOGIN_TOKEN)
            }
        }

        stage('Upload to Nexus') {
            steps {
                uploadToNexus(NEXUS_URL, NEXUS_REPOSITORY, NEXUS_CREDENTIALS_ID, ARTIFACT_PATH)
            }
        }

        stage('Docker Build') {
            steps {
                dockerBuild(IMAGE_NAME)
            }
        }

        stage('Docker Push') {
            steps {
                dockerPush(IMAGE_NAME, REGISTRY_CREDENTIALS_ID)
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                deployToK8s(KUBECONFIG_CREDENTIALS_ID, K8S_MANIFEST_PATH)
            }
        }
        */
    }
}
